function ConvertBase64ToFile(Base64, FileName: string) : String;
var
  inStream    : TStream;
  outStream   : TStream;

  DirFileInStream   : String;
  DirFileOutStream  : String;
  NameFileInStream  : String;
  NameFileOutStream : String;

  vStringList : TStringList;
begin
  vStringList := TStringList.Create;
  try
    //local onde vai salvar os arquivos antes de salvar no banco
    DirFileInStream  := GetCurrentDir + '\temp\pessoa_anexo\input\';
    DirFileOutStream := GetCurrentDir + '\temp\pessoa_anexo\output\';

    //verifica se os diretorios existem, se nao existir, cria
    if not DirectoryExists(DirFileInStream) then
      ForceDirectories(DirFileInStream);

    if not DirectoryExists(DirFileOutStream) then
      ForceDirectories(DirFileOutStream);

    DirFileInStream := DirFileInStream + FormatDateTime('yyyy-mm-dd HH-mm-ss',Now);
    vStringList.Add(Base64);
    vStringList.SaveToFile(DirFileInStream);
    inStream := TFileStream.Create(DirFileInStream, fmOpenRead);

    try
      DirFileOutStream := DirFileOutStream + FormatDateTime('yyyy-mm-dd HH-mm-ss',Now) + ' ' + FileName;
      outStream := TFileStream.Create(DirFileOutStream, fmCreate);
      try
        TNetEncoding.Base64.Decode(inStream, outStream);
        Result := DirFileOutStream;
      finally
        outStream.Free;
      end;
    finally
      inStream.Free;
    end;

  finally
    DeleteFile(PChar(DirFileInStream));
    FreeAndNil(vStringList);
  end;
end;